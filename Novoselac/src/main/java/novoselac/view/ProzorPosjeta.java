/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package novoselac.view;

import com.github.javafaker.DateAndTime;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.DateTimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import novoselac.controller.ObradaDijete;
import novoselac.controller.ObradaDjelatnik;
import novoselac.controller.ObradaPosjeta;
import novoselac.controller.ObradaUsluga;
import novoselac.model.Dijete;
import novoselac.model.Djelatnik;
import novoselac.model.Posjeta;
import novoselac.model.Usluga;
import novoselac.util.Aplikacija;
import novoselac.util.NovoselacException;

/**
 *
 * @author Administrator
 */
public class ProzorPosjeta 
        extends javax.swing.JFrame
implements NovoselacViewSucelje{

    private ObradaPosjeta obrada;
    private ObradaDijete obradaDijete;
    private ObradaUsluga obradaUsluga;
   
//    private ObradaDjelatnik obradaDjelatnik;
    /**
     * Creates new form ProzorPosjeta
     */
    public ProzorPosjeta() {
        initComponents();
        obrada= new ObradaPosjeta();
        obradaDijete= new ObradaDijete();
        obradaUsluga = new ObradaUsluga();
     
//         lstDijete.setCellRenderer(new DijeteRenderer());
               setTitle(Aplikacija.NAZIV_NOVOSELAC+ ": "+
               Aplikacija.OPERATER.getImePrezime() +
                ": Posjete");
        
        ucitajDjecu();
        
//        txtUvjet.requestFocus();

   
        odaberiDatumIVrijemeDolaska();
        odaberiDatumIVrijemeOdlaska();
        ucitaj();//usluge
    }
    
    private void odaberiDatumIVrijemeDolaska() {
        DatePickerSettings dps = new DatePickerSettings(new Locale("hr", "HR"));
        dps.setFormatForDatesCommonEra("dd. MM. YYYY. ");
        dps.setTranslationClear("Oƒçisti");
        dps.setTranslationToday("Danas");
         dtpDatumIVrijemeDolaska.datePicker.setSettings(dps);
         
        TimePickerSettings tps = new TimePickerSettings(new Locale("hr", "HR"));
         tps.setFormatForDisplayTime("HH:mm");
         dtpDatumIVrijemeDolaska.timePicker.getSettings().use24HourClockFormat();
         
         ArrayList<LocalTime>lista= new ArrayList<>();
         
           for(int j=0;j<24;j++){
        for(int i=0;i<60;i+=15){
            lista.add(LocalTime.of(j, i));
        }
        }
         
           dtpDatumIVrijemeDolaska.timePicker.getSettings()
                   .generatePotentialMenuTimes(lista);
       
               
    }
    
      private void odaberiDatumIVrijemeOdlaska() {
        DatePickerSettings dps = new DatePickerSettings(new Locale("hr", "HR"));
        dps.setFormatForDatesCommonEra("dd. MM. YYYY. ");
        dps.setTranslationClear("Oƒçisti");
        dps.setTranslationToday("Danas");
         dtpDatumIVrijemeOdlaska.datePicker.setSettings(dps);
         
        TimePickerSettings tps = new TimePickerSettings(new Locale("hr", "HR"));
         tps.setFormatForDisplayTime("HH:mm");
         dtpDatumIVrijemeOdlaska.timePicker.getSettings().use24HourClockFormat();
         
         ArrayList<LocalTime>lista= new ArrayList<>();
         
           for(int j=0;j<24;j++){
        for(int i=0;i<60;i+=15){
            lista.add(LocalTime.of(j, i));
        }
        }
         
           dtpDatumIVrijemeOdlaska.timePicker.getSettings()
                   .generatePotentialMenuTimes(lista);
       
               
    
    }
    
   @Override
   
       public void ucitaj(){
        DefaultComboBoxModel<Usluga> u
                = new DefaultComboBoxModel<>();
        u.addAll(new ObradaUsluga().read());
        cmbOdaberiUslugu.setModel(u);
        cmbOdaberiUslugu.repaint();
               
        
    }

        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbOdaberiUslugu = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dtpDatumIVrijemeOdlaska = new com.github.lgooddatepicker.components.DateTimePicker();
        dtpDatumIVrijemeDolaska = new com.github.lgooddatepicker.components.DateTimePicker();
        btnPotvrdiTermin = new javax.swing.JButton();
        btnNoviUnos = new javax.swing.JButton();
        txtNapomena = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDijete = new javax.swing.JList<>();
        txtUvjet = new javax.swing.JTextField();
        btnTrazi = new javax.swing.JButton();
        btnIspisDogovorenihPosjeta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cmbOdaberiUslugu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOdaberiUsluguActionPerformed(evt);
            }
        });

        jLabel3.setText("Odaberi uslugu");

        jLabel1.setText("Rezerviraj svoj termin");

        jLabel4.setText("Odaberi datum i vrijeme odlaska");

        jLabel5.setText("Odaberi datum i vijeme dolaska");

        btnPotvrdiTermin.setText("Potvrdi termin");
        btnPotvrdiTermin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotvrdiTerminActionPerformed(evt);
            }
        });

        btnNoviUnos.setText("Novi unos dijeteta");
        btnNoviUnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoviUnosActionPerformed(evt);
            }
        });

        jLabel6.setText("Napomena");

        jLabel12.setText("Unos dijeteta");

        jLabel13.setText("Odabir termina");

        jScrollPane1.setViewportView(lstDijete);

        txtUvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUvjetKeyPressed(evt);
            }
        });

        btnTrazi.setText("üîç");
        btnTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziActionPerformed(evt);
            }
        });

        btnIspisDogovorenihPosjeta.setText("Ispis dogovorenih termina");
        btnIspisDogovorenihPosjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIspisDogovorenihPosjetaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtUvjet)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnTrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNoviUnos, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(txtNapomena, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnPotvrdiTermin, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(24, 24, 24)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(cmbOdaberiUslugu, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnIspisDogovorenihPosjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(144, 144, 144)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dtpDatumIVrijemeDolaska, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(dtpDatumIVrijemeOdlaska, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNoviUnos)
                    .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTrazi))
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dtpDatumIVrijemeDolaska, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtpDatumIVrijemeOdlaska, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNapomena, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbOdaberiUslugu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPotvrdiTermin)
                    .addComponent(btnIspisDogovorenihPosjeta))
                .addGap(53, 53, 53))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbOdaberiUsluguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOdaberiUsluguActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOdaberiUsluguActionPerformed

    private void btnPotvrdiTerminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotvrdiTerminActionPerformed
       obrada.setEntitet(new Posjeta());
        napuniModel();
        try {
            obrada.create();
            odaberiDatumIVrijemeDolaska();
            odaberiDatumIVrijemeOdlaska();
        } catch (NovoselacException ex) {

            JOptionPane.showMessageDialog(
                getRootPane(),
                ex.getPoruka());
        }
    }//GEN-LAST:event_btnPotvrdiTerminActionPerformed

    private void btnNoviUnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoviUnosActionPerformed
        new ProzorDijete().setVisible(true);
    }//GEN-LAST:event_btnNoviUnosActionPerformed

    private void txtUvjetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUvjetKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ucitajDjecu();
        }
    }//GEN-LAST:event_txtUvjetKeyPressed

    private void btnTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziActionPerformed
        ucitajDjecu();
    }//GEN-LAST:event_btnTraziActionPerformed

    private void btnIspisDogovorenihPosjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIspisDogovorenihPosjetaActionPerformed
       new ProzorDogovoreniTermini().setVisible(true);
    }//GEN-LAST:event_btnIspisDogovorenihPosjetaActionPerformed

    private void ucitajDjecu(){
        DefaultListModel<Dijete> m= new DefaultListModel<>();
        m.addAll(obradaDijete.read(txtUvjet.getText().trim()));
        lstDijete.setModel(m);
        lstDijete.repaint();
    }

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIspisDogovorenihPosjeta;
    private javax.swing.JButton btnNoviUnos;
    private javax.swing.JButton btnPotvrdiTermin;
    private javax.swing.JButton btnTrazi;
    private javax.swing.JComboBox<Usluga> cmbOdaberiUslugu;
    private com.github.lgooddatepicker.components.DateTimePicker dtpDatumIVrijemeDolaska;
    private com.github.lgooddatepicker.components.DateTimePicker dtpDatumIVrijemeOdlaska;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Dijete> lstDijete;
    private javax.swing.JTextField txtNapomena;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables



    @Override
    public void napuniView() {
        var p= obrada.getEntitet();
        //napomena
        
        txtNapomena.setText(p.getNapomena());
        
        //usluga
        cmbOdaberiUslugu.setSelectedItem(p.getUsluge());
        
         // vrijeme i datum
        LocalDate ld = p.getDatumVrijemeDolaska().
                toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
        dtpDatumIVrijemeDolaska.datePicker.setDate(ld);
        LocalTime lt = p.getDatumVrijemeOdlaska()
                .toInstant().
                atZone(ZoneId.systemDefault())
                .toLocalTime();
        dtpDatumIVrijemeDolaska.timePicker.setTime(lt);
        
        LocalDate ldd = p.getDatumVrijemeOdlaska()
                .toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
        dtpDatumIVrijemeOdlaska.datePicker.setDate(ldd);
        LocalTime ltt = p.getDatumVrijemeOdlaska()
                .toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalTime();
        dtpDatumIVrijemeOdlaska.timePicker.setTime(ltt);
        
        //djeca na posjeti
        DefaultListModel<Dijete> m= new DefaultListModel<>();
        
        if(p.getDjeca()!=null && !p.getDjeca().isEmpty()){
         m.addAll(p.getDjeca());
            
        lstDijete.setModel(m);
        lstDijete.repaint();
            }
        }
    
   
    @Override
    public void napuniModel() {
       var p= obrada.getEntitet();
       
       p.setNapomena(txtNapomena.getText());
       
      LocalDate ld = dtpDatumIVrijemeDolaska.datePicker.getDate();
 
        LocalTime lt = dtpDatumIVrijemeDolaska.timePicker.getTime();
 
         LocalDateTime fromDateAndTime = LocalDateTime.of(ld,
                                                           lt);
        
        Date datum = Date.from(fromDateAndTime.atZone(ZoneId.systemDefault()).toInstant());
        
        
        p.setDatumVrijemeDolaska(datum);
        
        
        
        
        LocalDate ldd = dtpDatumIVrijemeOdlaska.datePicker.getDate();
 
        LocalTime ltt = dtpDatumIVrijemeOdlaska.timePicker.getTime();
 
         LocalDateTime
                 fromDateAndTime1
                 = LocalDateTime.of(ldd,ltt);
        
        Date datumO = Date.from(fromDateAndTime.atZone(ZoneId.systemDefault()).toInstant());
        
        
       p.setDatumVrijemeOdlaska(datumO);        
        
        
      cmbOdaberiUslugu.setSelectedItem(p.getUsluge());
       
      
        
   }

   

    
}
